name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PostgreSQL database
        run: |
          export PGPASSWORD=postgres
          # Создаем бд и пользователя
          psql -h localhost -U postgres -c "CREATE DATABASE homecloud;"
          psql -h localhost -U postgres -d homecloud -c "CREATE USER homecloudauthsevice WITH ENCRYPTED PASSWORD '123';"
          psql -h localhost -U postgres -d homecloud -c "GRANT ALL PRIVILEGES ON DATABASE homecloud TO homecloudauthsevice;"

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Stop local PostgreSQL
        run: |
          sudo systemctl stop postgresql || echo "PostgreSQL is not running"

      - name: Check if port 5432 is free
        run: |
          if lsof -i:5432; then
            echo "Port 5432 is already in use. Trying to stop the service."
            sudo systemctl stop postgresql || echo "PostgreSQL is not running"
          else
            echo "Port 5432 is free."
          fi
        
      - name: Build and start services
        run: |
          cd server
          docker-compose -f docker-compose.yml up -d

      - name: Install dependencies
        run: |
          cd server/auth_service/test/
          pip install pytest

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: server/log
