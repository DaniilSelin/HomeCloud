name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: > 
          --health-cmd="pg_isready -U postgres" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 1
          done

      - name: Create PostgreSQL user and database
        run: |
          psql -h localhost -U postgres -c "CREATE USER homecloudauthsevice WITH PASSWORD '123';"
          psql -h localhost -U postgres -c "CREATE DATABASE homecloud OWNER homecloudauthsevice;"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and start services
        run: |
          cd server
          docker-compose -f docker-compose.yml up -d

      - name: Install dependencies
        run: |
          cd server/auth_service/test/
          pip install pytest

      - name: Install Dockerize
        run: |
          curl -sSL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar -C /usr/local/bin -xzv

      - name: Wait for auth_service to be ready
        run: dockerize -wait tcp://127.0.0.1:5000 -timeout 60s

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

      - name: Stop and remove containers
        run: |
          cd ../../server
          docker-compose down

      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: server/log
